#ifndef HEV_IRIS_CONFIG_H_
#define HEV_IRIS_CONFIG_H_
/*! \file
 * \brief IRIS configuration variables
 */

namespace iris {

inline constexpr int kVersionMajor = @PROJECT_VERSION_MAJOR@; //!< Major version
inline constexpr int kVersionMinor = @PROJECT_VERSION_MINOR@; //!< Minor version
inline constexpr int kVersionPatch = @PROJECT_VERSION_PATCH@; //!< Patch version
inline constexpr char const* kVersionStr = "@PROJECT_VERSION_MAJOR@.@PROJECT_VERSION_MINOR@.@PROJECT_VERSION_PATCH@"; //!< Version string

inline constexpr char const* kVulkanSDKDirectory = "@Vulkan_SDK_DIR@"; //!< Location of Vulkan SDK

inline constexpr bool kPlatformWindows = bool(@PLATFORM_WINDOWS@); //!< Indicates if the build platform is Windows
inline constexpr bool kPlatformLinux = bool(@PLATFORM_LINUX@); //!< Indicates if the build platform is Linux

} // namespace iris

#ifndef NDEBUG

//! \brief Logs entry into a function.
#define IRIS_LOG_ENTER(log) \
  log->trace("ENTER: {} ({}:{})", __func__, __FILE__, __LINE__)
//! \brief Logs leave from a function.
#define IRIS_LOG_LEAVE(log) \
  log->trace("LEAVE: {} ({}:{})", __func__, __FILE__, __LINE__)

#else

#define IRIS_LOG_ENTER(log)
#define IRIS_LOG_LEAVE(log)

#endif

#endif // HEV_IRIS_CONFIG_H_

